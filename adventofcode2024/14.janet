(import judge)
(use jaylib)
(use ./util)

(def real-input (slurp "./input/14.txt"))
(def test-input `
p=0,4 v=3,-3
p=6,3 v=-1,-3
p=10,3 v=-1,2
p=2,0 v=2,-1
p=0,0 v=1,3
p=3,0 v=-2,-2
p=7,6 v=-1,-3
p=3,0 v=-1,-2
p=9,3 v=2,3
p=7,3 v=-1,2
p=2,4 v=2,-3
p=9,5 v=-3,-3
`)

(defn read [str]
  (def peg ~{:main (split "\n" (+ -1 (group :line)))
             :line (* "p=" :p2d " v=" :p2d)
             :p2d (/ (* :num "," :num) ,tuple)
             :num (number (* (? "-") :d+))})
  (def lines (peg/match peg str))
  [(tuple/slice (map first lines))
   (tuple/slice (map last lines))])


(defn move [dims p v t]
  (def next-p (p2+ p (vec*n v t)))
  (tuple/slice
    (map mod next-p dims)))

(judge/test (move [11 7] [2 4] [2 -3] 1) [4 1])
(judge/test (move [11 7] [2 4] [2 -3] 2) [6 5])
(judge/test (move [11 7] [2 4] [2 -3] 3) [8 2])
(judge/test (move [11 7] [2 4] [2 -3] 4) [10 6])
(judge/test (move [11 7] [2 4] [2 -3] 5) [1 3])

(defn quad [dims p]
  (defn coord [dim v]
    (def mid (div dim 2))
    (cond
      (< v mid) 0
      (> v mid) 1
      nil))
  (def result (tuple/slice (map coord dims p)))
  (if (some nil? result) nil result))

(judge/test (quad [11 7] [5 0]) nil)
(judge/test (quad [11 7] [4 0]) [0 0])
(judge/test (quad [11 7] [6 0]) [1 0])
(judge/test (quad [11 7] [6 3]) nil)
(judge/test (quad [11 7] [6 4]) [1 1])
(judge/test (quad [11 7] [4 4]) [0 1])

(defn safety-score [dims robots]
  (def num-per-quad @{})
  (loop [r :in robots
         :let [quad (quad dims r)]
         :when quad]
    (update num-per-quad quad |(inc (or $ 0)))
  (product num-per-quad)))

(defn move-all [dims ps vs t]
  (tuple/slice
    (seq [[i p] :pairs ps :let [v (in vs i)]] (move dims p v t))))

(defn part1 [dims str]
  (def [ps vs] (read str))
  (def robots (move-all dims ps vs 100))
  (safety-score dims robots))

(judge/test (part1 [11 7] test-input) nil)
(judge/test (part1 [101 103] real-input) nil)

(defn num-neighbors [ps]
  (def has-robot (tabseq [p :in ps] p true))
  (sum-loop [p :in ps dir :in dirs8 :let [n (p2+ p dir)] :when (has-robot n)] 1))

(defn find-ts []
  (def [ps vs] (read real-input))
  (def seen @{})
  (var max-num-neighbors 0)
  (loop [:before (var ps ps)
         _ :iterate (and (not (seen ps))
                         (< max-num-neighbors 1000))]
    (put seen ps true)
    (set ps (move-all [101 103] ps vs 1))
    (set max-num-neighbors (max (num-neighbors ps) max-num-neighbors)))
  (length seen))

# Takes 70 seconds
#(judge/test (find-ts) 6243)

(defn print-robots [[dim-x dim-y] ps]
  (def has-robot (tabseq [p :in ps] p true))
  (loop [x :range [0 dim-x]
         :after (print)
         y :range [0 dim-y]]
    (if (has-robot [y x])
      (prin "#")
      (prin "."))))

(judge/test-stdout
  (do
    (def [ps vs] (read real-input))
    (def dims [101 103])
    (print-robots dims (move-all dims ps vs 6243))) `
  ..............#..................................#..........#..........................................
  ..............#........................................................................................
  .......................................................................................................
  ...............#.......................................................................................
  .......................................................................................................
  .#...............................................................................#.....................
  .......................................................................................................
  ..............................................#........................................................
  .......................................................................................................
  .......................#..............................#................................................
  ..............................................................#.......#................................
  ......................#...........................................................#..#..#..............
  .............#.........................................................................................
  .........#.............................................................................................
  .....................................................#.................................................
  .......................................................................................................
  ...................................................................................................#...
  ......................................................#.................................#..............
  ...............................................#.........#.................................#...........
  ........................................................##.............................................
  ....................#...........#..........................#............#..............................
  ................#.......................................................#..#...........................
  ...............................................#.................................#.....................
  ......................#................................................................................
  ...........................................................................##..........................
  ............................#..........................................................................
  ............#..........................................................................................
  ........................#..............................................................................
  ..............................................................................#........................
  .......................................................................................................
  .............................#..................#......................................................
  .......................................#...............................................................
  .....................................................................................#.................
  ...........#..................................###############################..........................
  ....................#.........................#.............................#.............#......#.....
  ..............................................#.............................#...............#..........
  ..............................................#.............................#.........#................
  ..............................................#.............................#..........................
  ..............................................#..............#..............#..........................
  ..............................................#.............###.............#.................#........
  ..............................................#............#####............#..........................
  ..............................................#...........#######...........#..........................
  ..........................................#...#..........#########..........#....#.....................
  ......................#.......................#............#####............#.............#............
  .............#.....#...#....................#.#...........#######...........#..........................
  ..............................#.............#.#..........#########..........#..........................
  ..............................................#.........###########.........#............#....#........
  ..............................................#........#############........#....#.....................
  ..............................................#..........#########..........#..........................
  ..............................................#.........###########.........#.#........................
  ..............................................#........#############........#....#.....................
  ..............................................#.......###############.......#......................#...
  ...............#..............................#......#################......#..........................
  ..............................................#........#############........#..........................
  ..................#...........................#.......###############.......#..........................
  ..............................................#......#################......#..........................
  .........#..............#.....................#.....###################.....#..........................
  .##...........................................#....#####################....#..........................
  ................................#.............#.............###.............#.....................#....
  .......#......................................#.............###.............#.................#........
  ..............................................#.............###.............#..........................
  .................#............................#.............................#..........................
  ................#.............................#.............................#..........................
  .....#..#.....................................#.............................#..........................
  ..............................................#.............................#..........................
  ........................#........#............###############################..........................
  ............................................#..........................................................
  ......#.....#....................................................................................#.....
  ........................................................................#..............................
  .....................................#.................................................................
  ..........................#............................................................................
  .......................................................................................................
  ........................................................................................#...........#..
  .......................................................................................................
  .....................................#........##.......................................................
  ................................#......................................................................
  .....................................................................#.........................#.......
  .....................#.....................#................#...#......................................
  ..............................#..........................................#.............................
  ............#................#.........................................................................
  ......................................#....................#...........................................
  .......................................................................................................
  .......................................................................................................
  .......................................................................................................
  .......................................................................................................
  ..#....................#...............................................................................
  ......#................................................................................................
  ................#.............................#........................#...............................
  ....................................................................................#..................
  .....#.........#...#..........................................#........................................
  #......................................................................................................
  ..........................................................................#.......#....................
  ..................##..................................#.........#.............#........................
  ................................................................................#......................
  ................................#......................................#........#...................#..
  ..........................................................................#............................
  ..........................#............................................................................
  ...#.............................................#.....................................................
  ............................#............................#.............................................
  ...................................................................................................##..
  .......................................#...............................................................
`)

(defn main [&]
  (def [ps vs] (read real-input))
  (def dims [101 103])
  (def window-dims (map |(* 8 $) dims))
  (def robots (move-all dims ps vs 6243))

  (init-window ;window-dims "Advent of Code 2024 Day 14")
  (set-target-fps 5)
  (hide-cursor)

  (def target (load-render-texture ;dims))

  (while (not (window-should-close))
    (begin-texture-mode target)
    (loop [[x y] :in robots]
      (draw-pixel x y :green))
    (end-texture-mode)

    (begin-drawing)
      (clear-background :black)
      (draw-texture-ex (get-render-texture-texture2d target) window-dims 180 8 :white)
    (end-drawing))
  (close-window))
